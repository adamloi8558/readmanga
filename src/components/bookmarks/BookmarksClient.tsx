'use client';

import { useBookmarkStore } from '@/store/bookmarkStore';
import { ContentGrid } from '@/components/content/ContentGrid';
import { Card, CardContent } from '@/components/ui/Card';
import { Bookmark } from 'lucide-react';
import { useQueries } from '@tanstack/react-query';

export function BookmarksClient() {
  const bookmarks = useBookmarkStore((state) => state.bookmarks);
  const bookmarkArray = Array.from(bookmarks);

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞ bookmark ‡∏ú‡πà‡∏≤‡∏ô Next.js API route (‡πÉ‡∏ä‡πâ API_KEY ‡∏ù‡∏±‡πà‡∏á server)
  const bookmarkQueries = useQueries({
    queries: bookmarkArray.map((slug) => ({
      queryKey: ['content', 'detail', slug],
      queryFn: async () => {
        const res = await fetch(`/api/content/${slug}`);
        if (!res.ok) throw new Error('Failed to fetch');
        return res.json();
      },
      retry: 1,
    })),
  });

  const isLoading = bookmarkQueries.some((q) => q.isLoading);
  
  // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const bookmarkedContent = bookmarkQueries
    .filter((q) => q.data?.data)
    .map((q) => q.data!.data) || [];

  return (
    <div className="space-y-8">
      <div className="flex items-center gap-3">
        <div className="flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10">
          <Bookmark className="h-6 w-6 text-primary" />
        </div>
        <div>
          <h1 className="text-3xl font-bold">‡∏ö‡∏∏‡πä‡∏Ñ‡∏°‡∏≤‡∏£‡πå‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>
          <p className="text-gray-600 dark:text-gray-400">
            ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ {bookmarkArray.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
          </p>
        </div>
      </div>

      {bookmarkArray.length === 0 ? (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12 text-center">
            <Bookmark className="h-16 w-16 text-gray-300 dark:text-gray-700 mb-4" />
            <h2 className="text-xl font-semibold mb-2">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏∏‡πä‡∏Ñ‡∏°‡∏≤‡∏£‡πå‡∏Ñ</h2>
            <p className="text-gray-600 dark:text-gray-400">
              ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
            </p>
          </CardContent>
        </Card>
      ) : isLoading ? (
        <div className="grid grid-cols-2 gap-6 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
          {Array.from({ length: 5 }).map((_, i) => (
            <div key={i} className="space-y-3 animate-pulse">
              <div className="aspect-[3/4] rounded-2xl bg-gray-200 dark:bg-gray-800" />
              <div className="h-5 rounded bg-gray-200 dark:bg-gray-800" />
            </div>
          ))}
        </div>
      ) : bookmarkedContent.length > 0 ? (
        <ContentGrid content={bookmarkedContent} />
      ) : (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12 text-center">
            <div className="text-6xl mb-4">üîç</div>
            <h2 className="text-xl font-semibold mb-2">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ö‡∏∏‡πä‡∏Ñ‡∏°‡∏≤‡∏£‡πå‡∏Ñ</h2>
            <p className="text-gray-600 dark:text-gray-400 mb-4">
              ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
            </p>
            <div className="text-xs text-gray-500">
              Bookmarks: {bookmarkArray.join(', ')}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}

